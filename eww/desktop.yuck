(defwindow desktopmusic
  :monitor 0
  :exclusive "true"
  :windowtype "normal"
  :stacking "bg"
  :geometry (geometry :x "20"
                      :y "135"
                      :width "310px"
                      :height "200px"
                      :anchor "bottom left")
  :reserve (struts :side "right" :distance "4%")
  (box :orientation "v" :space-evenly "false"
    (box :class "musicartdesk" :style {musicartlink != "" ? `background-image: url("${musicartlink}"); min-height:260px; min-width: 30px; margin-bottom: 10px;` :  `min-height:0px; min-width: 0px; border:unset;`})
    (box :class "musiccontrols" :orientation "v" :space-evenly "false" :spacing 5
      (label :class "musictitle" :text {musicshort} :valign "start" :halign "center")
      (box :orientation "h"
          :class "musicscale"
          :space-evenly false
          :halign "center"
        (box :class "label" {musicposition})
        (scale :min 0
                      :max 101
                      :value musicpositionpercentage
                      :onchange "bash ~/.config/eww/scripts/music.sh {}")
                (box :class "label" {musiclength})
      )
      (box :class "musicbuttons" :orientation "h" :halign "center" :spacing 10
                  (button :class { mscloop != "None" ? "musicbutton2" : "musicbutton2dis"} :onclick {mscloop == "None" ? "playerctl loop playlist&" : "playerctl loop none"} " ")
                    (button :class "musicbutton" :onclick "playerctl previous &" "")
                    (button :class "playbutton" :onclick "playerctl play-pause &" {playingorpaused != "Paused" ? "" : "" })
                    (button :class "musicbutton" :onclick "playerctl next &" "")
                    (button :class {mscshuffle != "Off" ? "musicbutton2" : "musicbutton2dis"} :onclick {mscshuffle == "Off" ? "playerctl shuffle on&" : "playerctl shuffle off"} " ")
      )
    )
  )
)

(defwidget status []
(box :class "status" :orientation "v" :valign "center" :halign "center" :spacing 5
  (scalestat :label ""
      :value "${volume}"
      :onchange "pamixer --set-volume {}")

(scalestat :label ""
      :value "${brightness}"
      :onchange "brightnessctl set {}%")
)
)

(defwidget deskbuttons []
  (box :class "deskbuttons" :valign "end" :orientation "v" :halign "center" :spacing 10
    (box :spacing 10
      (button :class "test" :onclick "wlogout &" " ")
      (button :class "test" :onclick "kitty -e yazi ~ &" " ")
      (button :class "test" :onclick "systemctl suspend" "")
    )
    (box :spacing 10
      (button :class "test" :onclick "hyprshot-gui &" "󰹑 ")
      (button :class "test" :onclick "thunar ~ & eww open actioncenter --toggle &" " ")
      (button :class "test" :onclick "bash lightmode.sh" "")
    )
  )
)

(defwidget scalestat [label value onchange]
(box :orientation "h"
     :class "scalestat"
     :space-evenly false
  (box :class "label" label)
  (scale :min 0
         :max 101
         :active {onchange != ""}
         :value value
         :onchange onchange)
)
)
(defwindow stats
:monitor 0
:exclusive "false"
:windowtype "normal"
:stacking "bg"
:geometry (geometry :x "20"
                    :y "20"
                    :width "310px"
                    :height "100px"
                    :anchor "bottom left")
:reserve (struts :side "left" :distance "0%")
(box :orientation "v"
  (status)
)
)

(defwindow deskbutton
  :monitor 0
  :exclusive "false"
  :windowtype "normal"
  :stacking "bg"
  :geometry (geometry :x "20"
                      :y "20"
                      :width "310px"
                      :height "100px"
                      :anchor "top left")
  :reserve (struts :side "left" :distance "0%")
  (box :orientation "v"
    (deskbuttons)
  )
  )

(defwidget deskclock []
    (box :class "deskclock"
      :orientation "v"
      :halign "fill"
      :valign "fill"
      (label :class "clock-text" :text  "${hours}")
    (label :class "clock-text" :text "${minutes}")))

(defwindow deskclockwin
    :monitor 0
    :wm-ignore true
    :stacking "bg"
    :geometry (geometry :x "0px" :y "150px" :width "230px" :height "80px" :anchor "top center")
    (deskclock))

(defwidget volumeOSD []
(box :class "OSD" :orientation "v" :valign "center" :halign "center" :spacing 5
  (scalestat :label ""
      :value "${volume}"
      :onchange "pamixer --set-volume {}")
)
)

(defwindow volOSD
    :monitor 0
    :wm-ignore true
    :stacking "overlay"
    :geometry (geometry :x "0px" :y "20px" :width "350px" :anchor "top center")
    (volumeOSD))

(defwidget brightnessOSD []
(box :class "OSD" :orientation "v" :valign "center" :halign "center" :spacing 5
  (scalestat :label ""
      :value "${brightness}"
      :onchange "brightnessctl set {}%")
)
)

(defwindow brightOSD
    :monitor 0
    :wm-ignore true
    :stacking "overlay"
    :geometry (geometry :x "0px" :y "20px" :width "350px" :anchor "top center")
    (brightnessOSD))
